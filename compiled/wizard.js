// Generated by CoffeeScript 1.3.3
(function() {
  var Wizard,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Wizard = (function(_super) {

    __extends(Wizard, _super);

    Wizard.speed = 1.5;

    Wizard.prototype.speed = 1.5;

    Wizard.prototype.imgName = "wizard";

    Wizard.prototype.stoppedFor = 0;

    Wizard.stopFor = 800;

    Wizard.prototype.stopFor = 800;

    Wizard.prototype.swapped = false;

    function Wizard(world, lane) {
      this.world = world;
      this.lane = lane;
      this.eventualLane = this.lane;
      this.stopAt = Math.floor(Math.random() * this.world.height / 3);
      switch (this.lane) {
        case 1:
          this.lane = 2;
          break;
        case 2:
          this.lane = Math.random() > .5 ? 1 : 3;
          break;
        case 3:
          this.lane = 2;
      }
      Wizard.__super__.constructor.call(this, this.world, this.lane);
    }

    Wizard.prototype.eventualLane = function() {
      return this.eventual;
    };

    Wizard.prototype.swapLanes = function() {
      this.lane = this.eventualLane;
      return this.swapped = true;
    };

    Wizard.prototype.update = function(delta) {
      if (this.y >= this.stopAt && this.stoppedFor < this.stopFor) {
        if (!this.swapped && this.stoppedFor > this.stopFor / 2) {
          this.swapLanes();
        }
        this.stoppedFor += delta;
        this.stopped = true;
      } else {
        this.stopped = false;
      }
      return Wizard.__super__.update.call(this, delta);
    };

    Wizard.timeToHit = function() {
      return Wizard.__super__.constructor.timeToHit.call(this) + this.stopFor;
    };

    Wizard.releaseTime = function() {
      return 15 * 1000;
    };

    Wizard.probability = function() {
      return 0.1;
    };

    return Wizard;

  })(Enemy);

  window.Wizard = Wizard;

}).call(this);
